import React, { FC } from "react";
import { PortalProps } from "../Portal/Portal";
export type DialogPropsType = {
    /**
     * Заголовок диалога
     */
    label?: string;
    /**
     * Размер диалога
     */
    size?: "xs" | "sm" | "md" | "lg" | "xl" | "fluid" | "page";
    /**
     * Управляет состоянием компонента (открыт/закрыт)
     */
    open?: boolean;
    /**
     * Обработчик закрытия компонента
     */
    onClose?: () => void;
    /**
     * Выравнивание по вертикали
     */
    verticalAlign?: "top" | "center" | "bottom";
    /**
     * Стили для корневого элемента
     */
    rootStyle?: React.CSSProperties;
    /**
     * Дополнительный класс для корневого элемента
     */
    rootClassName?: string;
    /**
     * Отображать кнопку закрытия
     */
    hasCloser?: boolean;
    /**
     * Дочерние элементы диалога
     */
    children?: React.ReactNode;
    /**
     * Дополнительный класс для тела диалога
     */
    bodyClassName?: string;
    /**
     * Дополнительные стили для тела диалога
     */
    bodyStyle?: React.CSSProperties;
    /**
     * Возможно ли использовать свайпы чтобы закрывать диалог
     */
    isSwipeable?: boolean;
    /**
     * Удалить header у диалога
     */
    noHeader?: boolean;
    /**
     * Нода, компонент или функция возвращающая их
     *
     * Контейнер к которому будут добавляться порталы
     */
    container?: PortalProps["takePortalContainer"];
    /**
     * Рендерить ли в контейнер через портал.
     * @default true
     */
    usePortal?: boolean;
};
/**
 * Компонент диалога (модальное окно)
 */
declare const Dialog: FC<DialogPropsType>;
export default Dialog;
